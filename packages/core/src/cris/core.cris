(ns cris.core
  :import [["@cris/lang/core" :as cris.core]])

;; Utils

(def curry cris.core/curry)

(def log! (curry (:log console)))

(defn -> [x & fns]
  (.reduce fns (fn [v f] (f v)) x))

;; Arithmetic Operations

(def = cris.core/eq)
(def / cris.core/div)
(def + cris.core/add)
(def - cris.core/sub)
(def * cris.core/mul)
(def not cris.core/not)
(def not= cris.core/notEq)

;; Collections Operations

(defn map [f coll]
  (.map coll f))

(defn filter [f coll] 
  (.filter coll f))

(defn each [f coll]
  (.forEach coll f))

